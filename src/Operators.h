#pragma once

namespace Model {
	typedef enum  {
		BIT_LEFT_SHIFT_ASSIGN_OPERATOR,
		BIT_RIGHT_SHIFT_ASSIGN_OPERATOR,
		BIT_AND_ASSIGN_OPERATOR,
		BIT_OR_ASSIGN_OPERATOR,
		BIT_XOR_ASSIGN_OPERATOR,
		PLUS_ASSIGN_OPERATOR,
		MINUS_ASSIGN_OPERATOR,
		MUL_ASSIGN_OPERATOR,
		DIV_ASSIGN_OPERATOR,
		MOD_ASSIGN_OPERATOR,
		TEST_SUP_OPERATOR,
		TEST_INF_OPERATOR,
		TEST_EQUAL_OPERATOR,
		TEST_INFEQUAL_OPERATOR,
		TEST_SUPEQUAL_OPERATOR,
		TEST_DIFFERENT_OPERATOR,
		OR_OPERATOR,
		AND_OPERATOR,
		BIT_LEFT_SHIFT_OPERATOR,
		BIT_RIGHT_SHIFT_OPERATOR,
		BIT_AND_OPERATOR,
		BIT_OR_OPERATOR,
		XOR_OPERATOR,
		PLUS_OPERATOR,
		MINUS_OPERATOR,
		MUL_OPERATOR,
		DIV_OPERATOR,
		MODULUS_OPERATOR,
		ASSIGN_OPERATOR,
		COMA_OPERATOR
	} BINARYOPERATOR;

	typedef enum {
		PRE_INCREMENT_OPERATOR,
		PRE_DECREMENT_OPERATOR,
		POST_INCREMENT_OPERATOR,
		POST_DECREMENT_OPERATOR,
		BIT_NOT_OPERATOR,
		NOT_OPERATOR,
		UNARY_PLUS_OPERATOR,
		UNARY_MINUS_OPERATOR
	} UNARYOPERATOR;

}
